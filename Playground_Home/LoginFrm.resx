<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        L1BSAAAAAElFTkSuQmCC
</value>
  </data>
</root>